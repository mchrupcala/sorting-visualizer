import * as React from 'react';
import parseValue from './lib/parseRangeValue';

var KnobField = function KnobField(props) {
  return React.createElement("div", {
    style: {
      borderBottom: '1px solid rgb(234, 234, 234)',
      display: 'flex',
      flexDirection: 'row',
      justifyContent: 'space-between',
      padding: '3px 0'
    }
  }, props.children);
};

var KnobControl = function KnobControl(props) {
  return React.createElement("span", {
    style: {
      verticalAlign: 'middle',
      width: '150px'
    }
  }, props.children);
};

var KnobLabel = function KnobLabel(props) {
  return React.createElement("span", {
    style: {
      marginRight: 5
    }
  }, props.content || React.createElement("code", null, props.name));
};

var KnobBoolean = function KnobBoolean(props) {
  return React.createElement("input", {
    checked: props.value,
    onChange: function onChange(e) {
      props.setValue(e.target.checked);
    },
    type: "checkbox",
    value: props.value
  });
};

var KnobNumber = function KnobNumber(props) {
  return React.createElement("input", {
    onChange: function onChange(e) {
      props.setValue(parseInt(e.target.value, 10));
    },
    type: "number",
    value: props.value
  });
};

var KnobSelect = function KnobSelect(props) {
  return React.createElement("select", {
    onChange: function onChange(e) {
      props.setValue(e.target.value);
    },
    value: props.value
  }, props.values && props.values.map(function (option) {
    return React.createElement("option", {
      key: option,
      value: option
    }, option);
  }));
};

var KnobRange = function KnobRange(props) {
  return React.createElement("input", {
    type: "range",
    min: props.min,
    max: props.max,
    step: props.step,
    value: parseValue(props.value),
    onChange: function onChange(e) {
      props.setValue("".concat(e.target.value).concat(props.unit));
    },
    style: {
      width: '100%'
    }
  });
};

var KnobString = function KnobString(props) {
  return React.createElement("input", {
    onChange: function onChange(e) {
      props.setValue(e.target.value);
    },
    value: props.value
  });
};

var LogInspector = function LogInspector(props) {
  return React.createElement(React.Fragment, null, React.createElement("div", {
    style: {
      display: 'flex',
      padding: 5
    }
  }, React.createElement("div", {
    style: {
      flexGrow: 1
    }
  }, "Event log", ' ', React.createElement("span", {
    style: {
      padding: 3,
      background: '#ccc',
      borderRadius: '4rem',
      minWidth: '1.75rem',
      minHeight: '1.75rem',
      display: 'inline-block',
      textAlign: 'center'
    }
  }, props.items.length)), React.createElement("button", {
    onClick: props.clearLog,
    style: {
      fontSize: '0.9rem'
    }
  }, "Clear")), props.items.length > 0 && React.createElement("div", {
    style: {
      background: 'rgba(0, 0, 0, 0.04)',
      display: 'flex',
      flexDirection: 'column',
      fontFamily: 'monospace',
      fontSize: '0.9rem',
      padding: 5
    }
  }, props.items.map(function (line, index) {
    return React.createElement("div", {
      key: index
    }, line);
  })));
};

var defaultComponents = {
  KnobControl: KnobControl,
  KnobField: KnobField,
  KnobLabel: KnobLabel,
  KnobBoolean: KnobBoolean,
  KnobNumber: KnobNumber,
  KnobRange: KnobRange,
  KnobSelect: KnobSelect,
  KnobString: KnobString,
  LogInspector: LogInspector
};
export default defaultComponents;