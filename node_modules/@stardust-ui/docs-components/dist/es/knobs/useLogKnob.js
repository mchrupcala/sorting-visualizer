import * as React from 'react';
import { LogContext } from './KnobContexts';

var defaultFormatter = function defaultFormatter(name) {
  return "".concat(new Date().toLocaleTimeString(), ": ").concat(name);
};

var useLogKnob = function useLogKnob(name, callback) {
  var formatter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultFormatter;

  var _React$useContext = React.useContext(LogContext),
      appendLog = _React$useContext.appendLog;

  var proxy = React.useCallback(function () {
    for (var _len = arguments.length, a = new Array(_len), _key = 0; _key < _len; _key++) {
      a[_key] = arguments[_key];
    }

    appendLog(formatter.apply(void 0, [name].concat(a)));
    return callback.apply(void 0, a);
  }, [appendLog, callback, name, formatter]);
  return proxy;
};

export default useLogKnob;