import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import parseValue from './lib/parseRangeValue';
import useKnob from './useKnob';

var useRangeKnob = function useRangeKnob(options) {
  var _options$initialValue = options.initialValue,
      initialValue = _options$initialValue === void 0 ? 3 : _options$initialValue,
      _options$min = options.min,
      min = _options$min === void 0 ? 0 : _options$min,
      _options$max = options.max,
      max = _options$max === void 0 ? parseValue(initialValue) : _options$max,
      _options$step = options.step,
      step = _options$step === void 0 ? 1 : _options$step,
      rest = _objectWithoutProperties(options, ["initialValue", "min", "max", "step"]);

  var unit = "".concat(initialValue).replace("".concat(parseValue(initialValue)), '');
  return useKnob(Object.assign({
    initialValue: initialValue,
    unit: unit,
    min: parseValue(min),
    max: parseValue(max),
    step: parseValue(step),
    type: 'range'
  }, rest));
};

export default useRangeKnob;